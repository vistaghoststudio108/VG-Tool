<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>