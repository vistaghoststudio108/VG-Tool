<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                     
					xmlns:cur="clr-namespace:Vistaghost.VISTAGHOST.ToolWindows"
                    >

    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource x:Static cur:Controls.ControlForegroundKey}"/>
        <Setter Property="Background" Value="{DynamicResource x:Static cur:Controls.ControlBackgroundKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource x:Static cur:Controls.ForegroundKey}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template" Value="{DynamicResource ButtonBaseControlTemplate}"/>
    </Style>
    <ControlTemplate x:Key="ButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource x:Static cur:Controls.ControlBackgroundHoverKey}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource x:Static cur:Controls.ControlBorderHoverKey}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource x:Static cur:Controls.ControlBorderPressedKey}"/>
                <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static cur:Controls.ControlBorderPressedKey}}"/>-->
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource x:Static cur:Controls.ControlBorderPressedKey}"/>
                <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static cur:Controls.ControlBorderPressedKey}}"/>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource x:Static cur:Controls.ControlBackgroundHoverKey}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource x:Static cur:Controls.ControlBorderDisabledKey}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource x:Static cur:Controls.ControlForegroundDisabledKey}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ImageTemplate" TargetType="{x:Type Image}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>